name: ie-bank-infra

on:
  workflow_dispatch: #Allows you to manually trigger the workflow from the GitHub Actions tab.
  pull_request:
      branches:
        - main
  push:
      branches:
        - '*'
      paths-ignore:
        - 'scripts/**'

env:
  RESOURCE_GROUP_DEV: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  RESOURCE_GROUP_UAT: BCSAI2024-DEVOPS-STUDENTS-B-UAT
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  USER_ALIAS: talineshawwa

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      # Checkout code
    - uses: actions/checkout@main

      # Lint Bicep code 
    - name: Run Bicep linter
      run: az bicep build --file ./main.bicep

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'

    steps:

      # Checkout code
    - uses: actions/checkout@main
    
      # Log into Azure
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Check if a deployment is active
    - name: Check for active deployment
      id: check_deployment
      run: |
        az deployment group show --name ${{ env.USER_ALIAS }} --resource-group ${{ env.RESOURCE_GROUP_DEV }} --query "properties.provisioningState" -o tsv > deployment_status.txt
        if grep -q "Running" deployment_status.txt; then
          echo "An active deployment is running. Skipping new deployment."
          exit 1
        else
          echo "No active deployment. Proceeding with deployment."
        fi

      # Deploy Bicep file only if no active deployment
    - name: deploy
      if: success()
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_DEV }}
        template: ./main.bicep
        parameters: ./parameters/dev.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
        deploymentName: ${{ env.USER_ALIAS }}

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'UAT'

    steps:

      # Checkout code
    - uses: actions/checkout@main
    
      # Log into Azure
    - uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Check if a deployment is active
    - name: Check for active deployment
      id: check_deployment
      run: |
        az deployment group show --name ${{ env.USER_ALIAS }} --resource-group ${{ env.RESOURCE_GROUP_UAT }} --query "properties.provisioningState" -o tsv > deployment_status.txt
        if grep -q "Running" deployment_status.txt; then
          echo "An active deployment is running in UAT. Skipping new deployment."
          exit 1
        else
          echo "No active deployment in UAT. Proceeding with deployment."
        fi

      # Deploy Bicep file only if no active deployment
    - name: deploy
      if: success()
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ env.SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.RESOURCE_GROUP_UAT }}
        template: ./main.bicep
        parameters: ./parameters/uat.parameters.json appServiceAPIEnvVarENV=${{ vars.ENV }} appServiceAPIEnvVarDBHOST=${{ vars.DBHOST }} appServiceAPIEnvVarDBNAME=${{ vars.DBNAME }} appServiceAPIEnvVarDBPASS=${{ secrets.DBPASS }} appServiceAPIDBHostDBUSER=${{ secrets.DBUSER }} appServiceAPIDBHostFLASK_APP=${{ vars.FLASK_APP }} appServiceAPIDBHostFLASK_DEBUG=${{ vars.FLASK_DEBUG }}
        deploymentName: ${{ env.USER_ALIAS }}